scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
levels(data.hlthcov$mental.health.coverage)
filter(data.hlthcov, mental.health.coverage!="Not eligible for coverage / N/A")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data<-read.csv("MentalHealthCleanedDataset.csv")
names(data) = tolower(names(data))
str(data)
data <- data[data$self.employed==0,]
table(data$mental.health.coverage)
ggplot(data =  data, aes(x=mental.health.coverage,fill=factor(mental.health.coverage)))+
geom_bar(aes(x=mental.health.coverage), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("Distribution of employees getting Mental Health Benefits from employers")+
xlab("Employees getting Mental Health Benefits from employers")+
theme(legend.position = "bottom")
table(data$discuss.supervisor)
ggplot(data =  data, aes(x=discuss.supervisor,fill=factor(discuss.supervisor)))+
geom_bar(aes(x=discuss.supervisor), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Discuss with Supervisor")+
ggtitle("Distribution of employees' comfort level in discussing issues with Supervisors")+
xlab("Employees' comfort level in discussing issues with Supervisors")+
theme(legend.position = "bottom")
filter(data.hlthcov, mental.health.coverage!="Not eligible for coverage / N/A")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthcov <- data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A')
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthcov <- data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' && mental.health.coverage !='I don't know'')
data.hlthcov <- data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' && mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthcov <- data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' & mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthoptions <- data %>% filter(mental.health.options != 'N/A')
ggplot(data.hlthoptions , aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.options))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge") +
scale_fill_brewer(palette = 'YlGnBu', name = "awareness of mental health care available")+
ggtitle("People reaching out to employer with respect to awareness of mental health care available") +
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
filter(survey.data, self.employed==0)
survey.data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(survey.data) = tolower(names(survey.data))
str(data)
str(survey.data)
filter(survey.data, self.employed==0)
table(survey.data$mental.health.coverage)
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
test <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage + mental.health.options, data = data)
summary(test)
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
test <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage + mental.health.options, data = data)
test <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage + mental.health.options, data = survey.data)
summary(test)
z <- summary(test)$coefficients/summary(test)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
test <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage + mental.health.options, data = survey.data)
summary(test)
z <- summary(test)$coefficients/summary(test)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
dim(survey.data)
survey.data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(survey.data) = tolower(names(survey.data))
str(survey.data)
filter(survey.data, self.employed==0)
table(survey.data$mental.health.coverage)
ggplot(data =  survey.data, aes(x=mental.health.coverage,fill=factor(mental.health.coverage)))+
geom_bar(aes(x=mental.health.coverage), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("Distribution of employees getting Mental Health Benefits from employers")+
xlab("Employees getting Mental Health Benefits from employers")+
theme(legend.position = "bottom")
table(survey.data$discuss.supervisor)
ggplot(data =  survey.data, aes(x=discuss.supervisor,fill=factor(discuss.supervisor)))+
geom_bar(aes(x=discuss.supervisor), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Discuss with Supervisor")+
ggtitle("Distribution of employees' comfort level in discussing issues with Supervisors")+
xlab("Employees' comfort level in discussing issues with Supervisors")+
theme(legend.position = "bottom")
data.hlthcov <- survey.data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' & mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
ggplot(data =  survey.data, aes(x=discuss.supervisor,fill=factor(discuss.supervisor)))+
geom_bar(aes(x=discuss.supervisor), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Discuss with Supervisor")+
ggtitle("Distribution of employees' comfort level in discussing issues with Supervisors")+
xlab("Employees' comfort level in discussing issues with Supervisors")+
theme(legend.position = "bottom")
data.hlthcov <- survey.data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' & mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(data.hlthcov$mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
factor(data.hlthcov$mental.health.coverage)
dim(data.hlthcov)
data.hlthcov <- survey.data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A')
dim(data.hlthcov)
survey.data <- survey.data %<% filter(survey.data, self.employed==0)
survey.data <- survey.data %>% filter(survey.data, self.employed==0)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
str(survey.data)
survey.data <- data %>% filter(survey.data, self.employed==0)
survey.data <- data %>% filter(self.employed==0)
table(survey.data$mental.health.coverage)
ggplot(data =  survey.data, aes(x=mental.health.coverage,fill=factor(mental.health.coverage)))+
geom_bar(aes(x=mental.health.coverage), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("Distribution of employees getting Mental Health Benefits from employers")+
xlab("Employees getting Mental Health Benefits from employers")+
theme(legend.position = "bottom")
table(survey.data$discuss.supervisor)
ggplot(data =  survey.data, aes(x=discuss.supervisor,fill=factor(discuss.supervisor)))+
geom_bar(aes(x=discuss.supervisor), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Discuss with Supervisor")+
ggtitle("Distribution of employees' comfort level in discussing issues with Supervisors")+
xlab("Employees' comfort level in discussing issues with Supervisors")+
theme(legend.position = "bottom")
data.hlthcov <- survey.data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' & mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(data.hlthcov$mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthoptions <- survey.data %>% filter(mental.health.options != 'N/A')
ggplot(data.hlthoptions , aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.options))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge") +
scale_fill_brewer(palette = 'YlGnBu', name = "awareness of mental health care options")+
ggtitle("People reaching out to employer with respect to awareness of mental health care options") +
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
test <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage + mental.health.options, data = survey.data)
summary(test)
z <- summary(test)$coefficients/summary(test)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
exp(coef(test))
table(survey.data$mental.health.coverage)
ggplot(data =  survey.data, aes(x=mental.health.coverage,fill=factor(mental.health.coverage)))+
geom_bar(aes(x=mental.health.coverage), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("Distribution of employees getting Mental Health Benefits from employers")+
xlab("Employees getting Mental Health Benefits from employers")+
theme(legend.position = "bottom")
dim(survey.data)
table(survey.data$mental.health.coverage)
ggplot(data =  survey.data, aes(x=mental.health.coverage,fill=factor(mental.health.coverage)))+
geom_bar(aes(x=mental.health.coverage), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("Distribution of employees getting Mental Health Benefits from employers")+
xlab("Employees getting Mental Health Benefits from employers")+
theme(legend.position = "bottom")
table(survey.data$discuss.supervisor)
ggplot(data =  survey.data, aes(x=discuss.supervisor,fill=factor(discuss.supervisor)))+
geom_bar(aes(x=discuss.supervisor), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Discuss with Supervisor")+
ggtitle("Distribution of employees' comfort level in discussing issues with Supervisors")+
xlab("Employees' comfort level in discussing issues with Supervisors")+
theme(legend.position = "bottom")
data.hlthcov <- survey.data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' & mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(data.hlthcov$mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'YlGnBu', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthoptions <- survey.data %>% filter(mental.health.options != 'N/A')
ggplot(data.hlthoptions , aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.options))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge") +
scale_fill_brewer(palette = 'YlGnBu', name = "awareness of mental health care options")+
ggtitle("People reaching out to employer with respect to awareness of mental health care options") +
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
library(ggplot2)
library(RColorBrewer)
library(dplyr)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
str(data)
survey.data <- data %>% filter(self.employed==0)
set.seed(123)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
library(caTools)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
train = subset(survey.data, split==TRUE)
test = subset(survey.data, split==FALSE)
mod.forest <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
library(randomForest)
mod.forest <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
survey.data <- data %>% filter(self.employed==0 && discuss.supervisor!='Maybe')
set.seed(123)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
train = subset(survey.data, split==TRUE)
test = subset(survey.data, split==FALSE)
mod.forest <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
dim(survey.data)
survey.data <- data %>% filter(self.employed==0)
dim(survey.data)
survey.data <- data %>% filter(self.employed==0 && discuss.supervisor!="Maybe")
dim(survey.data)
survey.data <- data %>% filter(self.employed==0 & discuss.supervisor!="Maybe")
dim(survey.data)
set.seed(123)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
train = subset(survey.data, split==TRUE)
test = subset(survey.data, split==FALSE)
mod.forest <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
levels(survey.data$discuss.supervisor)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
str(data)
summary(data)
survey.data <- data %>% filter(self.employed==0 & discuss.supervisor!="Maybe")
dim(survey.data)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
str(data)
summary(data)
levels(data$discuss.supervisor)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
levels(data$discuss.supervisor)
levels(data$discuss.supervisor)==""
data$discuss.supervisor==""
survey.data$discuss.supervisor==""
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
mod.forest <- randomForest(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
train$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
mod.forest <- randomForest(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
train$mental.health.comfort.supervisor2 <- relevel(train$discuss.supervisor, ref = "No")
mod.forest <- randomForest(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
mod.forest <- rpart(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
library(rpart)
library(rpart.plot)
library(rpart)
library(rpart.plot)
train$mental.health.comfort.supervisor2 <- relevel(train$discuss.supervisor, ref = "No")
mod.forest <- rpart(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
prp(mod.forest)
tree.pred = predict(mod.trees, newdata=test)
mod.trees <- rpart(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
prp(mod.trees)
tree.pred = predict(mod.trees, newdata=test)
table(tree.pred, test$discuss.supervisor)
tree.pred
tree.pred$yes''
tree.pred$yes
tree.pred[,3]
tree.pred[,4]
survey.data <- data %>% filter(self.employed==0 & discuss.supervisor!="Maybe")
levels(survey.data$discuss.supervisor)
survey.data<-survey.data[survey.data$discuss.supervisor!="Maybe"]
survey.data<-survey.data[survey.data$discuss.supervisor!="Maybe",]
levels(survey.data$discuss.supervisor)
droplevels(survey.data)$discuss.supervisor
mod.trees <- randomForest(mental.health.comfort.supervisor2 ~ mental.health.coverage,data=train)
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
droplevels(train)$discuss.supervisor
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
levels(train$discuss.supervisor)
survey.data <- data %>% filter(self.employed==0 & discuss.supervisor!="Maybe")
dim(survey.data)
set.seed(123)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
str(data)
summary(data)
survey.data <- data %>% filter(self.employed==0 & discuss.supervisor!="Maybe")
dim(survey.data)
set.seed(123)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
train = subset(survey.data, split==TRUE)
test = subset(survey.data, split==FALSE)
droplevels(train)$discuss.supervisor
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
levels(train$discuss.supervisor)
train <- droplevels(train)$discuss.supervisor
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
train
train$discuss.supervisor <- droplevels(train)$discuss.supervisor
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
?droplevels
train <- droplevels(train)
train
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
droplevels(train$discuss.supervisor)
droplevels(train)
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
train = subset(survey.data, split==TRUE)
test = subset(survey.data, split==FALSE)
droplevels(train)
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
train<-factor(train)
train$discuss.supervisor<-factor(train$discuss.supervisor)
levels(train$discuss.supervisor)
split = sample.split(survey.data$discuss.supervisor, SplitRatio = 0.7)
train = subset(survey.data, split==TRUE)
test = subset(survey.data, split==FALSE)
train$discuss.supervisor<-factor(train$discuss.supervisor)
test$discuss.supervisor<-factor(test$discuss.supervisor)
mod.trees <- randomForest(discuss.supervisor ~ mental.health.coverage,data=train)
prp(mod.trees)
tree.pred = predict(mod.trees, newdata=test)
table(tree.pred, test$discuss.supervisor)
(25+111)/(17+76)
(25+111)/(17+76+25+111)
mod.forest <- randomForest(discuss.supervisor ~ mental.health.coverage ,data=train)
tree.pred = predict(mod.forest, newdata=test)
table(tree.pred, test$discuss.supervisor)
mod.forest1 <- randomForest(discuss.supervisor ~ mental.health.coverage + prev.anonymity.protected,data=train)
tree.pred1 = predict(mod.forest, newdata=test)
table(tree.pred1, test$discuss.supervisor)
mod.forest1 <- randomForest(discuss.supervisor ~ mental.health.coverage + prev.anonymity.protected,data=train)
tree.pred1 = predict(mod.forest1, newdata=test)
table(tree.pred1, test$discuss.supervisor)
tab[1,1]
tab <- table(tree.pred1, test$discuss.supervisor)
tab[1,1]
(tab[1,1]+tab[2,2])/tab[1,1]+tab[1,2]+tab[2,1]+tab[2,2]
(tab[1,1]+tab[2,2])/(tab[1,1]+tab[1,2]+tab[2,1]+tab[2,2])
mod.forest2 <- randomForest(discuss.supervisor ~ mental.health.coverage + prev.anonymity.protected + age,data=train)
tree.pred2 = predict(mod.forest2, newdata=test)
tab <- table(tree.pred2, test$discuss.supervisor)
accuracy <- (tab[1,1]+tab[2,2])/(tab[1,1]+tab[1,2]+tab[2,1]+tab[2,2])
accuracy
summary(mod.forest3)
summary(mod.forest3)
summary(mod.forest3)
summary(mod.forest2)
mod.forest2
setwd("D:/UW/Quarter 2/INFX 573/Project")
library(ggplot2)
library(RColorBrewer)
library(dplyr)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
dim(data)
dim(survey.data)
table(survey.data$discuss.supervisor)
survey.data$mental.health.coverage <- factor(survey.data$mental.health.coverage)
table(survey.data$discuss.supervisor)
survey.data$discuss.supervisor <- factor(survey.data$discuss.supervisor)
table(survey.data$discuss.supervisor)
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.coverage))
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.options))
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.coverage))
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.options))
levels(survey.data$mental.health.coverage)
levels(survey.data$mental.health.options)
survey.data$mental.health.options <- factor(survey.data$mental.health.options)
levels(survey.data$mental.health.options)
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.options))
chisq.test(table(data.hlthoptions$discuss.supervisor, data.hlthoptions$mental.health.options))
data.hlthoptions$mental.health.options <- factor(data.hlthoptions$mental.health.options)
chisq.test(table(data.hlthoptions$discuss.supervisor, data.hlthoptions$mental.health.options))
chisq.test(table(survey.data$discuss.supervisor, survey.data$age))
table(survey.data$discuss.supervisor, survey.data$age)
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.options))
chisq.test(table(survey.data$discuss.supervisor, survey.data$mental.health.coverage))
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
mod <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage + mental.health.options, data = survey.data)
summary(mod)
mod2 <- multinom(mental.health.comfort.supervisor2 ~ mental.health.options, data = survey.data)
summary(mod2)
z <- summary(mod2)$coefficients/summary(mod2)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
z <- summary(mod)$coefficients/summary(mod)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
mod <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage, data = survey.data)
summary(mod)
z <- summary(mod)$coefficients/summary(mod)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
mod2 <- multinom(mental.health.comfort.supervisor2 ~ mental.health.options, data = survey.data)
summary(mod2)
z <- summary(mod2)$coefficients/summary(mod2)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
library(ggplot2)
library(RColorBrewer)
library(dplyr)
data<-read.csv("MentalHealthCleanedDataset.csv", header = TRUE, stringsAsFactors = TRUE)
names(data) = tolower(names(data))
dim(data)
# DISCARDING RECORDS FOR SELF-EMPLOYED PEOPLE
survey.data <- data %>% filter(self.employed==0)
#data <- data[data$self.employed==0,]
dim(survey.data)
#1 Distribution of employees getting Mental Health Benefits from employers
table(survey.data$mental.health.coverage)
ggplot(data =  survey.data, aes(x=mental.health.coverage,fill=factor(mental.health.coverage)))+
geom_bar(aes(x=mental.health.coverage), position = "dodge")+
scale_fill_brewer(palette = 'Set3', name = "Benefits Provided")+
ggtitle("Distribution of employees getting Mental Health Benefits from employers")+
xlab("Employees getting Mental Health Benefits from employers")+
theme(legend.position = "bottom")
survey.data$discuss.supervisor <- factor(survey.data$discuss.supervisor)
table(survey.data$discuss.supervisor)
ggplot(data =  survey.data, aes(x=discuss.supervisor,fill=factor(discuss.supervisor)))+
geom_bar(aes(x=discuss.supervisor), position = "dodge")+
scale_fill_brewer(palette = 'Set3', name = "Discuss with Supervisor")+
ggtitle("Distribution of employees' comfort level in discussing issues with Supervisors")+
xlab("Employees' comfort level in discussing issues with Supervisors")+
theme(legend.position = "bottom")
data.hlthcov <- survey.data %>% filter(mental.health.coverage != 'Not eligible for coverage / N/A' & mental.health.coverage !="I don't know")
ggplot(data.hlthcov, aes(x = discuss.supervisor,y=Percentage, fill=factor(data.hlthcov$mental.health.coverage))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge")+
scale_fill_brewer(palette = 'Set3', name = "Benefits Provided")+
ggtitle("People reaching out to employer with respect to mental benefits being provided")+
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
data.hlthoptions <- survey.data %>% filter(mental.health.options != 'N/A')
ggplot(data.hlthoptions , aes(x = discuss.supervisor,y=Percentage, fill=factor(mental.health.options))) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), position = "dodge") +
scale_fill_brewer(palette = 'Set3', name = "awareness of mental health care options")+
ggtitle("People reaching out to employer with respect to awareness of mental health care options") +
xlab("People reaching out to employer")+
theme(legend.position = "bottom")
mod3 <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage+mental.health.options, data = survey.data)
summary(mod3)
survey.data$mental.health.comfort.supervisor2 <- relevel(survey.data$discuss.supervisor, ref = "No")
mod3 <- multinom(mental.health.comfort.supervisor2 ~ mental.health.coverage+mental.health.options, data = survey.data)
summary(mod3)
z <- summary(mod3)$coefficients/summary(mod2)$standard.errors
z
z <- summary(mod3)$coefficients/summary(mod3)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1))*2
p
fits <- fitted(mod3) # these are the predictions!
library(AUC)
rr <- roc(fits, Default$default)
rr <- roc(fits, survey.data$discuss.supervisor)
?roc
setwd("D:/UW/Quarter 2/INFX 573/Lab/Lab ML")
data <- read.csv("census data.csv")
data$income.g50 <-rep(0, nrow(data))
data$income.g50[data$income==" >50K"] <-1
mod <- glm(income.g50~education + age + sex + race, data = data[,!colnames(data)%in%"income"], family="binomial")
summary(mod)
levels(data$education)
dim(data)
y <- survey.data[,"discuss.supervisor"]
y <- as.logical(as.numeric(y)-1)
labs <- as.factor(as.numeric(y))
youden <- sensitivity(fits, labs)$measure + specificity(fits, labs)$measure-1
roc.ix <- which.max(youden)!
sens <- sensitivity(fits, labs)!
sens$cutoffs[roc.ix]
roc.ix <- which.max(youden)
sens <- sensitivity(fits, labs)
sens$cutoffs[roc.ix]
send
sens
